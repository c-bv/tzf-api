name: CI/CD

on:
    push:
        branches: ['main']

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}
    REPO_NAME: ${{ github.event.repository.name }}

jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Install dependencies
              run: npm install

            - name: Run tests
              run: npm test

    # build-and-push-image:
    #     runs-on: ubuntu-latest
    #     needs: test

    #     permissions:
    #         contents: read
    #         packages: write

    #     steps:
    #         - name: Checkout repository
    #           uses: actions/checkout@v4

    #         - name: Log in to the Container registry
    #           uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
    #           with:
    #               registry: ${{ env.REGISTRY }}
    #               username: ${{ github.actor }}
    #               password: ${{ secrets.GITHUB_TOKEN }}

    #         - name: Extract metadata (tags, labels) for Docker
    #           id: meta
    #           uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
    #           with:
    #               images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    #         - name: Build and push Docker image
    #           uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
    #           with:
    #               context: .
    #               file: ./.docker/Dockerfile
    #               push: true
    #               tags: ${{ steps.meta.outputs.tags }}
    #               labels: ${{ steps.meta.outputs.labels }}

    # deploy:
    #     runs-on: ubuntu-latest
    #     needs: build-and-push-image

    #     steps:
    #         - name: Deploy to VPS
    #           uses: appleboy/ssh-action@v1.0.0
    #           with:
    #               host: ${{ secrets.SSH_HOST }}
    #               username: ${{ secrets.SSH_USERNAME }}
    #               key: ${{ secrets.SSH_KEY }}
    #               port: ${{ secrets.SSH_PORT }}
    #               script: |
    #                   cd ~/${{ env.REPO_NAME }}
    #                   docker login ${{ env.REGISTRY }} -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
    #                   docker-compose down --rmi all
    #                   docker-compose up -d
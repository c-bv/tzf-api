name: CI/CD

on:
    push:
        branches: ['main']

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}
    REPO_NAME: ${{ github.event.repository.name }}

jobs:
    test:
        runs-on: ubuntu-latest
        environment: Production
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Create .env file
              run: echo "${{ secrets.DOTENV }}" > .env

            - name: Install dependencies
              run: npm install

            - name: Run tests
              run: npm test

    build-and-push-image:
        runs-on: ubuntu-latest
        needs: test
        environment: Production

        permissions:
            contents: read
            packages: write

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Log in to the Container registry
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Extract metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

            - name: Build and push Docker image
              uses: docker/build-push-action@v5
              with:
                  context: .
                  file: ./.docker/Dockerfile
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}

    deploy:
        runs-on: ubuntu-latest
        needs: build-and-push-image

        steps:
            - name: Deploy to VPS
              uses: appleboy/ssh-action@v1.0.3
              with:
                  host: ${{ secrets.SSH_HOST }}
                  username: ${{ secrets.SSH_USERNAME }}
                  key: ${{ secrets.SSH_KEY }}
                  port: ${{ secrets.SSH_PORT }}
                  script: |
                      cd ~/${{ env.REPO_NAME }}
                      echo "${{ secrets.DOTENV }}"
                      echo "${{ secrets.DOTENV }}" > .env
                      echo .env
                      docker login ${{ env.REGISTRY }} -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
                      docker-compose down --rmi all
                      docker-compose up -d
